{"version":3,"file":"component---src-pages-index-tsx-51a7c2d9b51e2e8d92b3.js","mappings":"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","sources":["webpack://mocky-demo/./src/pages/index.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport type { HeadFC, PageProps } from \"gatsby\"\n\nconst pageStyles : React.CSSProperties = {\n  color: \"#232129\",\n  padding: 96,\n  fontFamily: \"-apple-system, Roboto, sans-serif, serif\",\n}\n\nconst stepStyle : React.CSSProperties = {\n  width: '40px',\n  height: '40px',\n  background: 'rgb(148 168 255)',\n  borderRadius: '50%',\n  textAlign: 'center',\n  verticalAlign: 'middle',\n  display: 'inlin-block',\n  lineHeight: '40px',\n  marginBottom: '120px',\n  color: 'rgb(244 225 193)'\n};\n\nconst stepsContainer : React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  height: '480px',\n  width: '80px',\n  justifyContent: 'space-between',\n  zIndex: 1\n}\n\nconst wordsContainer : React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  height: '480px',\n  width: '280px',\n}\n\nconst wordsStyle : React.CSSProperties = {\n  height: '160px',\n  paddingTop: '10px'\n}\n\n\nconst verticalStepLine : React.CSSProperties = {\n  width: '0px',\n  position: 'absolute',\n  left: '20px',\n  height: '70%',\n  border: '1px solid rgb(244 225 193)',\n}\n\nconst hehe : React.CSSProperties = {\n  display: 'flex',\n  flexDirection: 'column',\n  paddingRight: '30px',\n}\n\nconst useExampleFetch = () => {\n  const [loading, setLoading] = useState(true);\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  \n  useEffect(() => {\n    fetch('https://baconipsum.com/api/?type=all-meat&paras=1&start-with-lorem=1')\n      .then(data => data.json())\n      .then(data => {\n        setLoading(false);\n        setData(data);\n      }).catch(e => {\n        setLoading(false);\n        setError(error);\n      });\n  }, []);\n\n  return [\n    loading,\n    data,\n    error\n  ];\n}\n\n\nconst IndexPage: React.FC<PageProps> = () => {\n  const [ loading, data, error ] = useExampleFetch();\n  \n  return (\n    <main style={pageStyles}>\n      <h1>\n        Mocky demo\n      </h1>\n      <div style={{\n        display: 'flex',\n        margin: '3rem',\n        position: 'relative'\n      }}>\n        <div style={{ display: 'flex', justifyContent: 'space-between'}}>\n          <div style={{\n              display: 'flex'\n            }}>\n            <div style={stepsContainer}>\n              <span style={stepStyle}>\n                1\n              </span>\n              <span style={stepStyle}>\n                2\n              </span>\n              <span style={stepStyle}>\n                3\n              </span>\n            </div>\n            <hr style={verticalStepLine} />\n          </div>\n          <div style={wordsContainer}>\n            <div style={wordsStyle}>\n              Install <a href=\"https://chrome.google.com/webstore/detail/mocky/hpmgblgihdlkcegplalpibfbpheknido\">Mocky</a> browser extension\n            </div>\n            <div style={wordsStyle}>\n            <a href=\"./mocky-demo.har\" download>Dowload</a> the tailored .Har file to be used with Mocky capabilities with this demo site\n            </div>\n            <div style={wordsStyle}>\n              Pick your options, start mocking and reload the page to see the results\n            </div>\n          </div>\n        </div>\n        <div style={{ paddingLeft: '4rem', width: '100%', display: 'flex' }}>\n          <div style={hehe}>\n            <span style={{ paddingBottom: '10px'}}> Requested image </span>\n            <img style={{ width: '300px', height: '250px' }} src={'https://http.cat/102'}/>\n          </div>\n          <div style={hehe}>\n            <span style={{ paddingBottom: '10px'}}> Requested fetch data </span>\n            <span> { loading ? 'Loading...' : data || error} </span>\n          </div>\n        </div>\n      </div>\n    </main>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>Home Page</title>\n"],"names":["pageStyles","color","padding","fontFamily","stepStyle","width","height","background","borderRadius","textAlign","verticalAlign","display","lineHeight","marginBottom","stepsContainer","flexDirection","justifyContent","zIndex","wordsContainer","wordsStyle","paddingTop","verticalStepLine","position","left","border","hehe","paddingRight","loading","data","error","setLoading","useState","setData","setError","useEffect","fetch","then","json","catch","e","useExampleFetch","React","style","margin","href","download","paddingLeft","paddingBottom","src","Head"],"sourceRoot":""}